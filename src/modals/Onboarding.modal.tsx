// import { ModalRoot, ModalPage, ModalCard, SplitLayout } from "@vkontakte/vkui";

import { Icon24CancelCircleFillRed, Icon24ChainOutline, Icon24CheckCircleFillGreen, Icon24PawOutline, Icon56DeleteOutlineIos, Icon56GavelOutline, Icon56StopwatchOutline, Icon56Users3Outline, Icon56WrenchOutline } from "@vkontakte/icons";
import { Spacing, ButtonGroup, Button, ModalCard } from "@vkontakte/vkui";
import React from "react";
import { DEFAULT_MODALS } from "../routes";

export const WelcomeOnboarding = ({ id, setCurrentModal }: { id: string, setCurrentModal: React.Dispatch<React.SetStateAction<any>> }) => {
    return (
        <ModalCard
            id={id}
            onClose={() => setCurrentModal(null)}

            icon={<Icon56GavelOutline />}
            header="–û —á–µ–º –∏–≥—Ä–∞?"
            subheader="–¢—É—Ç –Ω–∞–¥–æ –∫—Ä—É—à–∏—Ç—å –∏ –ª–æ–º–∞—Ç—å –∞–≤—Ç–æ –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏!"
            actions={
                <React.Fragment>
                    <Spacing size={16} />
                    <ButtonGroup mode="vertical" gap="s" stretched>
                        <Button before={<Icon24CheckCircleFillGreen />} size="l" mode="primary" stretched onClick={() => setCurrentModal(DEFAULT_MODALS.DAMAGE_2)}>
                            –¢–æ —á—Ç–æ –Ω–∞–¥–æ
                        </Button>
                        <Button before={<Icon24CancelCircleFillRed />} onClick={() => setCurrentModal(null)} size="l" mode="secondary" stretched>
                            –ù–µ, —É—Ö–æ–∂—É
                        </Button>
                    </ButtonGroup>
                </React.Fragment>
            }
        />
    )
}

export const DamageOnboarding = ({ id, setCurrentModal }: { id: string, setCurrentModal: React.Dispatch<React.SetStateAction<any>> }) => {
    return (
        <ModalCard
            id={id}
            onClose={() => setCurrentModal(null)}

            icon={<Icon56WrenchOutline />}
            header="–ö–∞–∫ –ø—Ä–æ–≤–∏–≥–∞—Ç—å—Å—è?"
            subheader="–í—ã–±–∏—Ä–∞–π –∞–≤—Ç–æ –∏–∑ —Å–≤–æ–µ–≥–æ —Å–ø–∏—Å–∫–∞ –º–∞—à–∏–Ω –∏ –∞–∫—Ç–∏–≤–Ω–æ —Ç–∞–ø–∞–π"
            actions={
                <React.Fragment>
                    <Spacing size={16} />
                    <ButtonGroup mode="vertical" gap="s" stretched>
                        <Button before={<Icon24CheckCircleFillGreen />} size="l" mode="primary" stretched onClick={() => setCurrentModal(DEFAULT_MODALS.BUY_3)}>
                            –ù–µ–ø–ª–æ—Ö–æ
                        </Button>
                        <Button before={<Icon24CancelCircleFillRed />} onClick={() => setCurrentModal(null)} size="l" mode="secondary" stretched>
                            –£–π—Ç–∏
                        </Button>
                    </ButtonGroup>
                </React.Fragment>
            }
        />
    )
}

export const BuyOnboarding = ({ id, setCurrentModal }: { id: string, setCurrentModal: React.Dispatch<React.SetStateAction<any>> }) => {
    return (
        <ModalCard
            id={id}
            onClose={() => setCurrentModal(null)}

            icon={<Icon56DeleteOutlineIos />}
            header="–ê –µ—Å–ª–∏ —è –≤—Å–µ —Å–ª–æ–º–∞—é?"
            subheader="–í —ç—Ç–æ–º —Å—É—Ç—å! –ü–æ–∫—É–ø–∞–π —Ö–ª–∞–º –∑–∞ üíé –∏ –ª–æ–º–∞–π –µ–≥–æ –¥–ª—è –±–æ–ª—å—à–µ–π –ø—Ä–∏–±—ã–ª–∏"
            actions={
                <React.Fragment>
                    <Spacing size={16} />
                    <ButtonGroup mode="vertical" gap="s" stretched>
                        <Button before={<Icon24CheckCircleFillGreen />} size="l" mode="primary" stretched onClick={() => setCurrentModal(DEFAULT_MODALS.INVITE_4)}>
                            –ö—Ä—É—Ç—å
                        </Button>
                        <Button before={<Icon24CancelCircleFillRed />} onClick={() => setCurrentModal(null)} size="l" mode="secondary" stretched>
                            –í—ã–π—Ç–∏
                        </Button>
                    </ButtonGroup>
                </React.Fragment>
            }
        />
    )
}

export const InviteOnboarding = ({ id, setCurrentModal }: { id: string, setCurrentModal: React.Dispatch<React.SetStateAction<any>> }) => {
    return (
        <ModalCard
            id={id}
            onClose={() => setCurrentModal(null)}

            icon={<Icon56Users3Outline />}
            header="–ê –≤–¥—Ä—É–≥ –º–æ–∏ –ª–∞–ø–∫–∏ —É—Å—Ç–∞–Ω—É—Ç?"
            subheader="–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –≤ –∏–≥—Ä—É –∏ –ø–æ–ª—É—á–∞–π –ø—Ä–∏—è—Ç–Ω—ã–π –±–æ–Ω—É—Å"
            actions={
                <React.Fragment>
                    <Spacing size={16} />
                    <ButtonGroup mode="vertical" gap="s" stretched>
                        <Button before={<Icon24CheckCircleFillGreen />} size="l" mode="primary" stretched onClick={() => setCurrentModal(DEFAULT_MODALS.ADS_5)}>
                            –ë–æ–Ω—É—Å—ã? –û–∫, –¥–∞–ª–µ–µ...
                        </Button>
                        <Button before={<Icon24CancelCircleFillRed />} onClick={() => setCurrentModal(null)} size="l" mode="secondary" stretched>
                            –ü–æ–∑–∂–µ
                        </Button>
                    </ButtonGroup>
                </React.Fragment>
            }
        />
    )
}

export const AdsOnboarding = ({ id, setCurrentModal }: { id: string, setCurrentModal: React.Dispatch<React.SetStateAction<any>> }) => {
    return (
        <ModalCard
            id={id}
            onClose={() => setCurrentModal(null)}
            icon={<Icon56StopwatchOutline />}
            header="–ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ —è –ª–µ–≤-—Ç–∏–≥—Ä –Ω–µ—Ç –¥—Ä—É–∑–µ–π?"
            subheader="–°–º–æ—Ç—Ä–∏ —Ä–µ–∫–ª–∞–º—É, –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å –∏ –∏—â–∏ –¥—Ä—É–∑–µ–π –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ!"
            actions={
                <React.Fragment>
                    <Spacing size={16} />
                    <ButtonGroup mode="vertical" gap="s" stretched>
                        <Button before={<Icon24ChainOutline />} mode='link' href='https://vk.com/tapoLom' size="l" stretched>
                            –ü—Ä—ã–≥–Ω—É—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!
                        </Button>
                        <Button before={<Icon24PawOutline />} onClick={() => setCurrentModal(null)} size="l" mode="primary" stretched>
                            –ù–∞–∂–∞—Ç—å –ª–∞–ø–∫–æ–π –∏ —É–π—Ç–∏
                        </Button>
                    </ButtonGroup>
                </React.Fragment>
            }
        />
    )
}